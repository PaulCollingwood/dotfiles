#!/bin/zsh

# This will tag all of the commits which alter the version number in
# the pom file.

# This is still pretty alpha, so a little bit of care is a good idea

# This does restore the previous position after it has completed.
# However, dont do anything to the project while this is running!

# This (obviously) depends on having the version script available

VERSION="0.1.0"
MANY_TAGS=1
# MANY_TAGS indicates if multiple tags for a given version should be created (like 1.0.0, 1.0.0-1, 1.0.0-2...)
# bash truthiness, 0 = true, !0 = false.

# The pom file to track can be specified as the only argument on the command line
PROJECT=$(pwd)
POM_FILE=${1:-pom.xml}

# This shows the hash that the given tag refers to
# This is used to prevent recreating existing tags
function show_tag() {
    local tag_name=${1}

    git show-ref ${tag_name} | cut -d' ' -f1
}

# This verifies that the tag exists
# If this returns 0 then the tag exists
function tag_exists() {
    local tag_name=${1}

    git show-ref ${tag_name} | grep 'refs/tags' 2>&1 >/dev/null
}

# This creates a tag for the sha provided
# This assumes that you have confirmed the tag is not a duplicate and the sha has not been tagged already
function make_tag() {
    local sha=${1}
    local version=${2}

    echo "making tag ${version}"
    git tag -a "${version}" -m "${version} : Auto tagged by tag-versions ${VERSION}" ${sha}
}

# This takes all of the sha and version combos that show-versions produces
# This then processes each line to see if it is appropriate to create a tag
# for that entry.
function handle_tags() {
    while read sha version
    do
        if tag_exists "${version}"
        then
            if [ ${MANY_TAGS} -eq 0 ]
            then
                if [ "${sha}" = "$(show_tag '${version}')" ]
                then
                    echo "Tag ${version} exists and is this hash"
                else
                    count=-1
                    while tag_exists "${version}${count}"
                    do
                        ;
                    done
                    make_tag "${sha}" "${version}${count}"
                fi
            else
                echo "Tag ${version} exists"
            fi
        else
            make_tag "${sha}" "${version}"
        fi
    done
}

cd ${PROJECT}

show-versions -p "${PROJECT}" -f "${POM_FILE}" | handle_tags

# vim: set ai et sw=4 syntax=zsh :
