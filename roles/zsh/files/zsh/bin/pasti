#!/bin/zsh

local HASTE_SERVER
local COMMAND

COMMAND=${0:t}

function help () {
    cat <<EOF
This pastes the input to a paste server for easy sharing.
useage: [PASTE |] ${COMMAND} [FILE|PASTE]

This will take the paste from the following sources:

 * The filename specified as the first argument, if that file exists and is readable.
 * The standard in, if there is any content.
 * The complete argument list as raw text.

The first matching option will be used. Calling with no arguments will result
in this help text.
EOF
}

# Implements the server neutral part of the function.
# Stolen from https://raw.github.com/roobert/dotfiles/master/.zsh/robs/functions/haste.zsh
# Who stole from https://gist.github.com/flores/3670953
function haste_client {
    local content
    local output
    local url

    if [[ ! -z $1 && -f $1 ]]
    then
        content=$(cat $1)
    elif read -t 0 content
    then
        local current
        while read -t 0 current
        do
            content="${content}${IFS}${current}"
        done
    else
        content="$@"
    fi

    if [ -z "${content}" ]
    then
        help
        return 0
    fi

    # The response from the curl is JSON such as {"key":"sixicupevo"}
    output=$(
        curl --silent --request POST --data "${content}" $HASTE_SERVER/documents |
            perl -MJSON -ne '$obj = decode_json($_); print "raw/$obj->{key}"'
    )
    url="${HASTE_SERVER}/${output}"

    if [ ! -z $DISPLAY ]
    then
        if type -f xclip &>/dev/null
        then
            echo $url | copy
        elif type -f xsel &>/dev/null
        then
            echo $url | xsel -b -i
        fi
    fi

    echo $url
}

HASTE_SERVER="http://pasti.co"
haste_client $*

# vim: set ai et sw=4 syntax=zsh :
