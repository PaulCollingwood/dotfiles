" Guard against loading this twice. This does mean you cannot do:
" source $MYVIMRC
" to pick up changes, but that isn't usually what you want anyway (it does not
" clear existing settings that are no longer being set).
if ( exists('g:loaded_vimrc') && g:loaded_vimrc )
    finish
endif
let g:loaded_vimrc = 1

""""""""""""""""""""""""""""
" PRE PLUGIN CONFIGURATION "
""""""""""""""""""""""""""""

let g:NumberToggleTrigger="<leader>n"

let g:syntastic_always_populate_loc_list = 1

""""""""""""
" VIM-PLUG "
""""""""""""

" Heavily based on https://github.com/roobert/dotfiles/blob/master/.vimrc
if version > 701

    if has('vim_starting')
        " install vim-plug stuff!
        " inspired by: http://www.erikzaadi.com/2012/03/19/auto-installing-vundle-from-your-vimrc/
        if !filereadable(expand('~/.vim/autoload/plug.vim'))
            echo "Installing Vim Plug.."
            echo ""
            silent !mkdir -p ~/.vim/autoload
            silent !curl -fLo ~/.vim/autoload/plug.vim https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        endif
    endif

    call plug#begin('~/.vim/plugged')

    " Each of these is registered in the g:plugs map.
    Plug 'https://github.com/altercation/vim-colors-solarized.git'
    Plug 'https://github.com/bronson/vim-visual-star-search'
    Plug 'https://github.com/dart-lang/dart-vim-plugin.git'
    Plug 'https://github.com/godlygeek/tabular.git'
    Plug 'https://github.com/groenewege/vim-less.git'
    Plug 'https://github.com/hail2u/vim-css3-syntax.git'
    Plug 'https://github.com/jeffkreeftmeijer/vim-numbertoggle'
    Plug 'https://github.com/fatih/vim-go.git'
    Plug 'https://github.com/kien/ctrlp.vim'
    Plug 'https://github.com/majutsushi/tagbar.git'
    Plug 'https://github.com/mileszs/ack.vim.git'
    Plug 'https://github.com/scrooloose/nerdtree.git'
    Plug 'https://github.com/scrooloose/syntastic.git'
    Plug 'https://github.com/tpope/vim-commentary.git'
    Plug 'https://github.com/tpope/vim-fugitive.git'
    Plug 'https://github.com/tpope/vim-repeat'
    Plug 'https://github.com/tpope/vim-sensible.git'
    Plug 'https://github.com/tpope/vim-surround.git'
    Plug 'https://github.com/tpope/vim-unimpaired.git'
    Plug 'https://github.com/vim-perl/vim-perl'
    Plug 'https://github.com/vim-scripts/kwbdi.vim.git'
    Plug 'https://github.com/vim-scripts/nginx.vim.git'
    Plug 'https://github.com/matthewfranglen/vim-shell.git'
    Plug 'https://github.com/matthewfranglen/vim-scheme.git'
    Plug 'https://github.com/matthewfranglen/vim-mf-defaults.git'

    if has( 'python' )
        Plug 'https://github.com/actionshrimp/vim-xpath.git'

        if ( v:version > 704 || ( v:version > 703 && has( 'patch584' ) ) )
            Plug 'https://github.com/Valloric/YouCompleteMe'
        endif
    endif

    " The g:plugs map maps the plugin name to the settings for it.
    " The most relevant setting for this is the 'dir' setting which is the
    " destination folder.
    " Example (truncated) output of ':echo g:plugs':
    " {'vim-surround': {'uri': 'https://github.com/tpope/vim-surround.git', 'dir': '/home/matthew/.vim/plugged/vim-surround/', 'frozen': 0, 'branch': 'master'},...

    let install_required = 0
    for spec in values(g:plugs)
        if !isdirectory(spec.dir)
            let install_required = 1
        endif
    endfor
    if install_required
        PlugInstall
    endif

    call plug#helptags()
    call plug#end()
endif

""""""""""
" COLORS "
""""""""""

" Convince Vim it can use 256 colors inside Gnome Terminal.
" Needs CSApprox plugin
set t_Co=256

let g:solarized_termcolors=256
colorscheme solarized
set background=dark

""""""""""""""
" KEYMAPPING "
""""""""""""""

" \f now formats perl scripts with perltidy
autocmd FileType perl :nnoremap <leader>f :1,$!perltidy<CR>

" \l now Data::Dumps the current WORD
" nnoremap <C-L> diWi{ print Data::Dumper->new( [ <Esc>p$a ] )->Dump; <Esc>p$a }<Esc>
nnoremap <leader>l diWiprint Data::Dumper->new( [ <C-R>" ] )->Dump;<Esc>

" Fugitive bindings
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gc :Gcommit<CR>

" Just want the syntax highlighting to work!
function! s:MyGitDiff()
    execute s:ExecuteInShell('git diff')
    set syntax=diff
endfunction
command! MyGitDiff call s:MyGitDiff()

nnoremap <leader>gd :MyGitDiff<CR>

"""""""""""""""""""
" BUNDLE SETTINGS "
"""""""""""""""""""

if has('python') || has('python3')
    set rtp+=/usr/local/src/powerline/powerline/bindings/vim
endif

" http://stackoverflow.com/questions/5601749/how-to-filter-out-files-by-extension-in-nerdtree
let NERDTreeIgnore = ['\.pyc$']

" Toggle Tags with <F8>, Nerdtree with <F7>
nnoremap <F7> :NERDTreeToggle<CR><C-W>l
nnoremap <F8> :TagbarToggle<CR>

let g:syntastic_python_checkers=['python', 'pyflakes', 'pep8', 'pylint']

" Set markdown filetype and spelling
" Required otherwise .md is modulo-2 filetype
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
autocmd BufRead,BufNewFile *.md setlocal spell

"""""""""""""""""""""""""""
" CUSTOM RUNTIME SETTINGS "
"""""""""""""""""""""""""""

function! LoadCustomSettings()
if filereadable("./vimrc")
    source ./vimrc
endif
endfunction
autocmd VimEnter * :call LoadCustomSettings()

""""""""""""""""""""""
" ARBITRARY COMMANDS "
""""""""""""""""""""""

" This allows you to issue a command that uses the names of all of the buffer
" files. For example:
" :exe '! git add ' . join(BuffersList(), ' ')
" Would add the file corresponding to every open buffer to git.
" See http://stackoverflow.com/a/271709/170865
function! BuffersList()
    let all = range(0, bufnr('$'))
    let result = []
    for b in all
        if buflisted(b)
            call add(result, bufname(b))
        endif
    endfor
    return result
endfunction
